## Â© 2022 Nephio Authors
## Licensed under the Apache License 2.0
## SPDX-License-Identifier: Apache-2.0
---
- name: Slurp access token
  ansible.builtin.slurp:
    src: /home/{{ cloud_user }}/gitea/nephio-gitea-token
  register: gitea_token
  when:
    - gitea_username is defined
- name: Pause until the gitea API is up and running
  ansible.builtin.uri:
    url: http://localhost:3000/api/v1/version
    follow_redirects: none
    method: GET
  register: _result
  until: _result.status == 200
  retries: 12 # 12 * 5 seconds = 1min (60/5)
  delay: 5 # Every 5 seconds

- name: Create repos
  ansible.builtin.uri:
    url: http://localhost:3000/api/v1/user/repos
    headers:
      Authorization: token {{ gitea_token['content'] | b64decode }}
      Content-Type: application/json
      accept: application/json
    method: POST
    body: {'auto_init': true, 'name': "nephio-{{ item.key }}"}
    status_code: 201
    body_format: json
  register: result
  with_dict: "{{ clusters }}"
  when:
    - gitea_username is defined
    - item.key != "mgmt"

- name: Create repos
  ansible.builtin.uri:
    url: http://localhost:3000/api/v1/user/repos
    headers:
      Authorization: token {{ gitea_token['content'] | b64decode }}
      Content-Type: application/json
      accept: application/json
    method: POST
    body: {'auto_init': true, 'name': "nephio-catalog"}
    status_code: 201
    body_format: json
  register: result
  with_dict: "{{ clusters }}"
  when:
    - gitea_username is defined
    - item.key == "mgmt"

- name: Print return information from the previous task
  ansible.builtin.debug:
    var: result
    verbosity: 2
  when:
    - gitea_username is defined

- name: Create and configure blueprint repos
  block:
    - name: Create blueprint repo "{{ blueprint_repos.0 }}"
      ansible.builtin.uri:
        url: http://localhost:3000/api/v1/user/repos
        headers:
          Authorization: token {{ gitea_token['content'] | b64decode }}
          Content-Type: application/json
          accept: application/json
        method: POST
        body: {'auto_init': true, 'name': "{{ blueprint_repos.0 }}"}
        status_code: 201
        body_format: json
      register: result

    - name: Create blueprint repo "{{ blueprint_repos.1 }}
      ansible.builtin.uri:
        url: http://localhost:3000/api/v1/user/repos
        headers:
          Authorization: token {{ gitea_token['content'] | b64decode }}
          Content-Type: application/json
          accept: application/json
        method: POST
        body: {'auto_init': true, 'name': "{{ blueprint_repos.1 }}"}
        status_code: 201
        body_format: json
      register: result

    - name: Create blueprint directory
      file:
        path: "{{ tmp_directory }}/blueprint"
        state: directory

    - name: Copy {{ blueprint_repos.0 }} to tmp_directory
      ansible.builtin.copy:
        src: "{{ installer_lib }}/{{ item }}.tar"
        dest: "{{ tmp_directory }}/blueprint/{{ item }}.tar"
        remote_src: true
      with_items:
        - "{{ blueprint_repos.0 }}"

    - name: Unarchive {{ blueprint_repos.0 }} archive
      ansible.builtin.unarchive:
        src: "{{ tmp_directory }}/blueprint/{{ item }}.tar"
        dest: "{{ tmp_directory }}/blueprint/"
        remote_src: true
      with_items:
        - "{{ blueprint_repos.0 }}"

    - name: Copy {{ blueprint_repos.1 }} to tmp_directory
      ansible.builtin.copy:
        src: "{{ installer_lib }}/{{ item }}.tar"
        dest: "{{ tmp_directory }}/blueprint/{{ item }}.tar"
      with_items:
        - "{{ blueprint_repos.1 }}"

    - name: Unarchive {{ blueprint_repos.1 }} archive
      ansible.builtin.unarchive:
        src: "{{ tmp_directory }}/blueprint/{{ item }}.tar"
        dest: "{{ tmp_directory }}/blueprint/"
        remote_src: true
      with_items:
        - "{{ blueprint_repos.1 }}"

    - name: Copy push script to tmp_directory
      ansible.builtin.copy:
        src: "{{ installer_lib }}/blueprint_push.sh"
        dest: "{{ tmp_directory }}/blueprint/blueprint_push.sh"

    - name: push all {{ blueprint_repos.0 }}
      shell: sh  "{{ tmp_directory }}"/blueprint/blueprint_push.sh "{{ tmp_directory }}"/blueprint/{{ blueprint_repos.0 }} {{ blueprint_repos.0 }} {{ gitea_token['content'] | b64decode }}

    - name: push all {{ blueprint_repos.1 }}
      shell: sh  "{{ tmp_directory }}"/blueprint/blueprint_push.sh "{{ tmp_directory }}"/blueprint/{{ blueprint_repos.1 }} {{ blueprint_repos.1 }} {{ gitea_token['content'] | b64decode }}

    - name: Remove blueprint temp dir
      file:
        path: "{{ tmp_directory }}/blueprint"
        state: absent
  when: gitea_username is defined
